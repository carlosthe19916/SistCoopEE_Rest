package org.softgreen.sistcoop.socio.ejb.models.jpa.entities;

// Generated 02-may-2014 11:48:28 by Hibernate Tools 4.0.0

import java.sql.Timestamp;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.annotations.Type;
import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.NotEmpty;
import org.softgreen.socio.entity.type.TipoPersona;

/**
 * Socio generated by hbm2java
 */

@Entity
@Table(indexes = { @Index(columnList = "id") })
@XmlRootElement
@XmlAccessorType(XmlAccessType.PROPERTY)
public class Socio extends PersonaNatural implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private Long id;
	private Persona socio;
	private Persona apoderado;
	private Date fechaInicio;
	private Date fechaFin;
	private boolean estado;

	private CuentaAporte cuentaAporte;
	private Set<CuentaBancariaEntity> cuentasBancarias = new HashSet<CuentaBancariaEntity>(0);

	private Timestamp version;

	public Socio() {
	}

	@Id
	@GeneratedValue(generator = "SgGenericGenerator")
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@NotNull
	@Size(min = 1, max = 15)
	@NotEmpty
	@NotBlank
	@Enumerated(EnumType.STRING)
	public TipoPersona getTipoPersona() {
		if (socio instanceof PersonaNatural)
			return TipoPersona.NATURAL;
		else if (socio instanceof PersonaJuridica)
			return TipoPersona.JURIDICA;
		else
			return null;
	}

	public void setTipoPersona(TipoPersona tipoPersona) {
		if (socio instanceof PersonaNatural)
			this.socio = new PersonaNatural();
		else if (socio instanceof PersonaJuridica)
			this.socio = new PersonaJuridica();
		else
			this.socio = null;
	}

	@NotNull
	@Size(min = 1, max = 20)
	@NotEmpty
	@NotBlank
	public String getTipoDocumento() {
		return this.socio.getTipoDocumento();
	}

	public void setTipoDocumento(String tipoDocumento) {
		this.socio.setTipoDocumento(tipoDocumento);
	}

	@NotNull
	@Size(min = 1, max = 20)
	@NotEmpty
	@NotBlank
	public String getNumeroDocumento() {
		return this.socio.getNumeroDocumento();
	}

	public void setNumeroDocumento(String numeroDocumento) {
		this.socio.setNumeroDocumento(numeroDocumento);
	}

	@NotNull
	@Size(min = 1, max = 20)
	@NotEmpty
	@NotBlank
	public String getTipoDocumentoApoderado() {
		return this.apoderado.getTipoDocumento();
	}

	public void setTipoDocumentoApoderado(String tipoDocumentoApoderado) {
		this.apoderado.setTipoDocumento(tipoDocumentoApoderado);
	}

	@NotNull
	@Size(min = 1, max = 20)
	@NotEmpty
	@NotBlank
	public String getNumeroDocumentoApoderado() {
		return this.apoderado.getNumeroDocumento();
	}

	public void setNumeroDocumentoApoderado(String numeroDocumentoApoderado) {
		this.apoderado.setNumeroDocumento(numeroDocumentoApoderado);
	}

	@NotNull
	@Temporal(TemporalType.DATE)
	public Date getFechaInicio() {
		return fechaInicio;
	}

	public void setFechaInicio(Date fechaInicio) {
		this.fechaInicio = fechaInicio;
	}

	@Temporal(TemporalType.DATE)
	public Date getFechaFin() {
		return fechaFin;
	}

	public void setFechaFin(Date fechaFin) {
		this.fechaFin = fechaFin;
	}

	@NotNull
	@Type(type = "org.hibernate.type.TrueFalseType")
	@Column(name = "ESTADO")
	public boolean isEstado() {
		return estado;
	}

	public void setEstado(boolean estado) {
		this.estado = estado;
	}

	@NotNull
	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(foreignKey = @ForeignKey)
	public CuentaAporte getCuentaAporte() {
		return cuentaAporte;
	}

	public void setCuentaAporte(CuentaAporte cuentaAporte) {
		this.cuentaAporte = cuentaAporte;
	}

	@XmlTransient
	@OneToMany(mappedBy = "socio", fetch = FetchType.LAZY)
	public Set<CuentaBancariaEntity> getCuentasBancarias() {
		return cuentasBancarias;
	}

	public void setCuentasBancarias(Set<CuentaBancariaEntity> cuentasBancarias) {
		this.cuentasBancarias = cuentasBancarias;
	}

	@Version
	@XmlTransient
	public Timestamp getVersion() {
		return version;
	}

	public void setVersion(Timestamp version) {
		this.version = version;
	}

	@Transient
	public Persona getSocio() {
		return socio;
	}

	public void setSocio(Persona socio) {
		this.socio = socio;
	}

	@Transient
	public Persona getApoderado() {
		return apoderado;
	}

	public void setApoderado(Persona apoderado) {
		this.apoderado = apoderado;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((socio == null) ? 0 : socio.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof Socio))
			return false;
		Socio other = (Socio) obj;
		if (socio == null) {
			if (other.socio != null)
				return false;
		} else if (!socio.equals(other.socio))
			return false;
		return true;
	}

}
